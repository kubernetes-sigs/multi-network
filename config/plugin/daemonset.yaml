kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: dra-plugin-role
rules:
  - apiGroups:
      - ""
    resources:
      - nodes
    verbs:
      - get
  - apiGroups:
      - "resource.k8s.io"
    resources:
      - resourceslices
    verbs:
      - list
      - watch
      - create
      - update
      - delete
  - apiGroups:
      - "resource.k8s.io"
    resources:
      - resourceclaims
      - deviceclasses
    verbs:
      - get
  - apiGroups:
      - "resource.k8s.io"
    resources:
      - resourceclaims/status
    verbs:
      - patch
      - update
  - apiGroups:
      - "multinetwork.networking.k8s.io"
    resources: ["*"]
    verbs: ["*"]
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: dra-plugin-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: dra-plugin-role
subjects:
  - kind: ServiceAccount
    name: dra-plugin-service-account
    namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: dra-plugin-service-account
  namespace: kube-system
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: dra-plugin
  namespace: kube-system
  labels:
    tier: node
    app: dra-plugin
    k8s-app: dra-plugin
spec:
  selector:
    matchLabels:
      app: dra-plugin
  template:
    metadata:
      labels:
        tier: node
        app: dra-plugin
        k8s-app: dra-plugin
    spec:
      hostNetwork: true
      tolerations:
        - operator: Exists
          effect: NoSchedule
      serviceAccountName: dra-plugin-service-account
      hostPID: true
      # initContainers:
      #   - name: enable-nri
      #     image: busybox:stable
      #     volumeMounts:
      #       - mountPath: /etc
      #         name: etc
      #     securityContext:
      #       privileged: true
      #     command:
      #       - /bin/sh
      #       - -c
      #       - |
      #         set -o errexit
      #         set -o pipefail
      #         set -o nounset
      #         set -x
      #         if grep -q "io.containerd.nri.v1.nri" /etc/containerd/config.toml
      #         then
      #            echo "containerd config contains NRI reference already; taking no action"
      #         else
      #            echo "containerd config does not mention NRI, thus enabling it";
      #            printf '%s\n' "[plugins.\"io.containerd.nri.v1.nri\"]" "  disable = false" "  disable_connections = false" "  plugin_config_path = \"/etc/nri/conf.d\"" "  plugin_path = \"/opt/nri/plugins\"" "  plugin_registration_timeout = \"5s\"" "  plugin_request_timeout = \"5s\"" "  socket_path = \"/var/run/nri/nri.sock\"" >> /etc/containerd/config.toml
      #            echo "restarting containerd"
      #            nsenter -t 1 -m -u -i -n -p -- systemctl restart containerd
      #         fi
      containers:
        - name: dra-plugin
          args:
            - /plugin
            - --v=4
          image: dra-plugin:latest
          imagePullPolicy: Never
          resources:
            requests:
              cpu: "100m"
              memory: "50Mi"
          securityContext:
            capabilities:
              add: ["NET_ADMIN", "SYS_ADMIN"]
          readinessProbe:
            httpGet:
              path: /healthz
              port: 9177
          volumeMounts:
            - name: device-plugin
              mountPath: /var/lib/kubelet/plugins
            - name: plugin-registry
              mountPath: /var/lib/kubelet/plugins_registry
            - name: nri-plugin
              mountPath: /var/run/nri
            - name: netns
              mountPath: /var/run/netns
              mountPropagation: HostToContainer
      volumes:
        - name: device-plugin
          hostPath:
            path: /var/lib/kubelet/plugins
        - name: plugin-registry
          hostPath:
            path: /var/lib/kubelet/plugins_registry
        - name: nri-plugin
          hostPath:
            path: /var/run/nri
        - name: netns
          hostPath:
            path: /var/run/netns
        - name: etc
          hostPath:
            path: /etc
---

